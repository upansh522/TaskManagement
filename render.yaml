services:
  # 1. Nginx Reverse Proxy (The public-facing Web Service)
  - type: web
    name: task-management-gateway
    runtime: docker
    buildFilter:
      paths:
        - nginx/**
    dockerfilePath: ./nginx/dockerfile
    envVars:
      - key: PORT
        value: 80

  # 2. User API (Private Service, only accessible within the network)
  - type: pserv
    name: user-service
    runtime: docker
    buildFilter:
      paths:
        - backend/user_service/**
    dockerfilePath: ./backend/user_service/Dockerfile
    envVars:
      - key: MONGO_URI
        fromSecret: MONGO_URI
      - key: JWT_SECRET
        fromSecret: JWT_SECRET
      - key: CLIENT_URL
        fromService:
          type: web
          name: task-management-gateway
          property: url

  # 3. Task API (Private Service)
  - type: pserv
    name: task-service
    runtime: docker
    buildFilter:
      paths:
        - backend/task_service/**
    dockerfilePath: ./backend/task_service/Dockerfile
    envVars:
      - key: MONGO_URI
        fromSecret: MONGO_URI
      - key: JWT_SECRET
        fromSecret: JWT_SECRET
      - key: CLIENT_URL
        fromService:
          type: web
          name: task-management-gateway
          property: url
      - key: USER_SERVICE_URL
        value: http://user-service:8001

  # 4. Client / Frontend (Private Service, served via Nginx)
  - type: pserv
    name: client
    runtime: docker
    buildFilter:
      paths:
        - client/**
    dockerfilePath: ./client/Dockerfile
    envVars:
      - key: NEXT_PUBLIC_CLIENT_URL
        fromService:
          type: web
          name: task-management-gateway
          property: url
      - key: NEXT_PUBLIC_USER_SERVICE_URL
        fromService:
          type: web
          name: task-management-gateway
          property: url
      - key: NEXT_PUBLIC_TASK_SERVICE_URL
        fromService:
          type: web
          name: task-management-gateway
          property: url
